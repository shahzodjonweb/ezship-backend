name: CI - Test & Lint

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ezship_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, pdo, pdo_pgsql, redis, bcmath, gd
        coverage: xdebug

    - name: Get Composer Cache Directory
      id: composer-cache
      run: |
        echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache Composer dependencies
      uses: actions/cache@v3
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Copy .env
      run: cp .env.example .env

    - name: Generate Application Key
      run: php artisan key:generate

    - name: Set testing environment
      run: |
        echo "DB_CONNECTION=pgsql" >> .env
        echo "DB_HOST=127.0.0.1" >> .env
        echo "DB_PORT=5432" >> .env
        echo "DB_DATABASE=ezship_test" >> .env
        echo "DB_USERNAME=postgres" >> .env
        echo "DB_PASSWORD=postgres" >> .env
        echo "REDIS_HOST=127.0.0.1" >> .env
        echo "CACHE_DRIVER=redis" >> .env
        echo "SESSION_DRIVER=redis" >> .env
        echo "QUEUE_CONNECTION=redis" >> .env

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Run Migrations
      run: php artisan migrate --force

    - name: Run Tests with Coverage
      run: vendor/bin/phpunit --coverage-text --coverage-clover=coverage.xml

    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, pdo, pdo_pgsql
        tools: phpcs, phpstan

    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Run PHP Code Sniffer
      run: vendor/bin/phpcs --standard=PSR12 app/
      continue-on-error: true

    - name: Run PHPStan
      run: vendor/bin/phpstan analyse app/ --level=5
      continue-on-error: true