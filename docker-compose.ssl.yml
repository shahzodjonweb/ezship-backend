version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    image: ezship-prod:latest
    container_name: ezship-app-prod
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./storage:/var/www/html/storage
      - ./public/uploads:/var/www/html/public/uploads
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_URL=https://api.ezship.app
      - API_URL=https://api.ezship.app
      - EXTERNAL_NGINX=true
    depends_on:
      - postgres
      - redis
    networks:
      - ezship-network
    expose:
      - "9000"
    healthcheck:
      test: ["CMD", "php", "-v"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  postgres:
    image: postgres:15-alpine
    container_name: ezship-postgres-prod
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_DB: ezship_production
      POSTGRES_USER: ezship_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-defaultpassword123}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres-prod-data:/var/lib/postgresql/data
    expose:
      - "5432"
    networks:
      - ezship-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-ezship_user}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: ezship-redis-prod
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis-prod-data:/data
    expose:
      - "6379"
    networks:
      - ezship-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    container_name: ezship-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx-ssl.conf:/etc/nginx/nginx.conf:ro
      - ./public:/var/www/html/public:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
      - nginx-cache:/var/cache/nginx
    depends_on:
      - app
    networks:
      - ezship-network
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot:latest
    container_name: ezship-certbot
    restart: unless-stopped
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - ezship-network

networks:
  ezship-network:
    driver: bridge

volumes:
  postgres-prod-data:
    driver: local
  redis-prod-data:
    driver: local
  nginx-cache:
    driver: local